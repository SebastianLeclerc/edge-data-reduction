import matplotlib.pyplot as plt

# Data for Stable scenario
"""
#0.0010, 0.0022, 0.0046, 0.0100, 0.0215, 0.0464, 0.1000, 0.2154, 0.4642, 1.0000
reduction_dp = [100 - x for x in [69.17, 69.17, 69.17, 61.16, 26.97, 8.14, 6.53, 6.28, 6.28, 6.28]]
tad_dp = [0.22, 0.22, 0.22, 1.84, 8.11, 13.11, 12.01, 13.01, 13.01, 13.01]
mad_dp = [0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01]
md_dp = [0.02, 0.02, 0.02, 0.03, 0.04, 0.04, 0.05, 0.05, 0.05, 0.05]

#1, 2, 4, 6, 9, 13, 19, 27, 38, 55
reduction_da = [100 - x for x in [20.07, 16.78, 12.62, 10.07, 7.77, 5.97, 4.66, 3.54, 2.73, 2.11]]
tad_da = [9.21, 9.58, 10.03, 10.66, 11.16, 11.62, 11.59, 12.86, 13.40, 14.53]
mad_da = [0.01] * 10
md_da = [0.08, 0.08, 0.08, 0.09, 0.09, 0.09, 0.08, 0.09, 0.09, 0.09]

#0.0010, 0.0022, 0.0046, 0.0100, 0.0215, 0.0464, 0.1000, 0.2154, 0.4642, 1.0000
reduction_df = [100 - x for x in [58.23, 58.23, 58.23, 50.59, 24.55, 5.03, 3.48, 3.48, 3.48, 3.48]]
tad_df = [2.1601, 2.1601, 2.1601, 3.4742, 8.5516, 16.5047, 18.0348, 18.0348, 18.0348, 18.0348]
mad_df = [0.0013, 0.0013, 0.0013, 0.0022, 0.0053, 0.0103, 0.0112, 0.0112, 0.0112, 0.0112]
md_df = [0.0800, 0.0800, 0.0800, 0.0800, 0.0379, 0.0900, 0.0900, 0.0900, 0.0900, 0.0900]



# Data for Rising scenario

#0.0010, 0.0022, 0.0046, 0.0100, 0.0215, 0.0464, 0.1000, 0.2154, 0.4642, 1.0000
reduction_dp = [100 - x for x in [89.24, 88.74, 88.36, 76.35, 49.44, 27.28, 15.77, 9.64, 7.76, 7.32]]
tad_dp = [0.01, 0.02, 0.02, 1.34, 6.02, 13.95, 21.15, 26.42, 26.66, 27.90]
mad_dp = [0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.01, 0.02, 0.02, 0.02]
md_dp = [0.01, 0.01, 0.01, 0.01, 0.06, 0.16, 0.11, 0.13, 0.15, 0.14]

#1, 2, 4, 6, 9, 13, 19, 27, 38, 55
reduction_da = [100 - x for x in [20.09, 16.77, 12.58, 10.08, 7.76, 5.94, 4.63, 3.57, 2.75, 2.07]]
tad_da = [19.53, 16.85, 31.42, 38.76, 42.98, 59.39, 57.28, 41.86, 39.94, 133.68]
mad_da = [0.01, 0.01, 0.02, 0.02, 0.03, 0.04, 0.04, 0.03, 0.02, 0.08]
md_da = [3.93, 3.93, 3.93, 3.94, 3.94, 4.06, 4.03, 3.93, 3.93, 4.08]

#0.0010, 0.0022, 0.0046, 0.0100, 0.0215, 0.0464, 0.1000, 0.2154, 0.4642, 1.0000
reduction_df = [100 - x for x in [70.71, 70.71, 70.71, 60.33, 34.86, 20.90, 9.89, 3.50, 3.50, 3.50]]
tad_df = [1.8559, 1.8559, 1.8559, 6.9169, 7.7232, 21.6900, 35.4371, 83.5099, 83.5099, 83.5099]
mad_df = [0.0012, 0.0012, 0.0012, 0.0043, 0.0048, 0.0136, 0.0222, 0.0523, 0.0523, 0.0523]
md_df = [0.0375, 0.0375, 0.0375, 3.9300, 0.0579, 3.9300, 3.9300, 4.0800, 4.0800, 4.0800]

"""
# Data for Fluctuating scenario
#0.0010, 0.0022, 0.0046, 0.0100, 0.0215, 0.0464, 0.1000, 0.2154, 0.4642, 1.0000
reduction_dp = [100 - x for x in [98.37, 97.34, 96.50, 91.01, 74.05, 54.98, 33.74, 20.16, 14.06, 11.16]]
tad_dp = [0.01, 0.01, 0.04, 0.70, 4.07, 12.90, 34.20, 58.41, 94.11, 129.97]
mad_dp = [0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.02, 0.04, 0.06, 0.08]
md_dp = [0.00, 0.00, 0.00, 0.01, 0.04, 0.20, 0.72, 0.32, 0.56, 1.25]

#1, 2, 4, 6, 9, 13, 19, 27, 38, 55
reduction_da = [100 - x for x in [20.10, 16.78, 12.61, 10.08, 7.79, 5.97, 4.65, 3.56, 2.72, 2.11]]
tad_da = [59.92, 74.35, 103.00, 158.50, 198.44, 316.53, 426.10, 590.44, 841.73, 1256.72]
mad_da = [0.04, 0.04, 0.06, 0.10, 0.12, 0.19, 0.26, 0.36, 0.51, 0.76]
md_da = [5.88, 5.88, 5.88, 5.98, 5.94, 6.00, 5.98, 5.94, 6.33, 5.98]

#0.0010, 0.0022, 0.0046, 0.0100, 0.0215, 0.0464, 0.1000, 0.2154, 0.4642, 1.0000
reduction_df = [100 - x for x in [96.86, 96.86, 96.86, 94.21, 87.39, 76.28, 54.98, 38.32, 23.78, 14.54]]
tad_df = [0.5902, 0.5902, 0.5902, 1.0378, 2.7620, 5.2529, 23.8916, 29.8894, 53.5734, 150.2663]
mad_df = [0.0004, 0.0004, 0.0004, 0.0006, 0.0017, 0.0032, 0.0144, 0.0180, 0.0323, 0.0907]
md_df = [0.0453, 0.0453, 0.0453, 0.0453, 0.0966, 0.1132, 5.9400, 5.8800, 0.7015, 5.9400]





# Symbols for each algorithm
symbols = {'DP': 'o', 'DA': 's', 'DF': 'D'}

# TAD Plot
plt.figure(figsize=(5, 4))
plt.plot(reduction_dp, tad_dp, label='DP', marker=symbols['DP'])
plt.plot(reduction_da, tad_da, label='DA', marker=symbols['DA'])
plt.plot(reduction_df, tad_df, label='DF', marker=symbols['DF'])
plt.xlabel('Data Reduction (%)')
plt.ylabel('TAD')
plt.xlim(100, 0)
plt.legend()
plt.tight_layout()
plt.show()

# MAD Plot
plt.figure(figsize=(5, 4))
plt.plot(reduction_dp, mad_dp, label='DP', marker=symbols['DP'])
plt.plot(reduction_da, mad_da, label='DA', marker=symbols['DA'])
plt.plot(reduction_df, mad_df, label='DF', marker=symbols['DF'])
plt.xlabel('Data Reduction (%)')
plt.ylabel('MAD')
plt.xlim(100, 0)
plt.legend()
plt.tight_layout()
plt.show()

# MD Plot
plt.figure(figsize=(5, 4))
plt.plot(reduction_dp, md_dp, label='DP', marker=symbols['DP'])
plt.plot(reduction_da, md_da, label='DA', marker=symbols['DA'])
plt.plot(reduction_df, md_df, label='DF', marker=symbols['DF'])
plt.xlabel('Data Reduction (%)')
plt.ylabel('MD')
plt.xlim(100, 0)
plt.legend()
plt.tight_layout()
plt.show()